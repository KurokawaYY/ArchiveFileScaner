# test_crc.py
import os
from pathlib import Path
import scanner


def test_crc_functionality():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ CRC32"""

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    test_content = b"Hello, World! This is a test file for CRC32 calculation."
    test_file = Path("test_crc_file.txt")

    with open(test_file, "wb") as f:
        f.write(test_content)

    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CRC32 —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏")
    print("=" * 50)

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫–∞–Ω–µ—Ä
    test_scanner = scanner.ArchiveScanner()

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ CRC32 –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    crc_result = test_scanner._calculate_file_crc32(test_file)
    print(f"üìÑ –û–±—ã—á–Ω—ã–π —Ñ–∞–π–ª: {test_file}")
    print(f"üî¢ CRC32: {crc_result:08X}" if crc_result else "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã—á–∏—Å–ª–∏—Ç—å")

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    print(f"\nüìÅ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏...")
    results = test_scanner.scan_directory(".")

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å CRC32
    print(f"\nüìã –ü–µ—Ä–≤—ã–µ 5 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
    for i, item in enumerate(results[:5]):
        print(f"{i + 1}. {item['type']}: {item['name']}")
        print(f"   üìè –†–∞–∑–º–µ—Ä: {item.get('size', 0)} –±–∞–π—Ç")
        print(f"   üî¢ CRC32: {item.get('crc32', 'N/A')}")
        print()

    # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    test_file.unlink()
    print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω")


if __name__ == "__main__":
    test_crc_functionality()